version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

  postgres-company:
    image: postgres:15.2
    container_name: postgres-company
    environment:
      POSTGRES_DB: companydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-identity:
    image: postgres:15.2
    container_name: postgres-identity
    environment:
      POSTGRES_DB: identitydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  company-ms:
    build:
      context: ./companyms
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-company:5432/companydb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
    ports:
      - "8081:8080"
    depends_on:
      postgres-company:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  identity-ms:
    build:
      context: ./identityms
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-identity:5432/identitydb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
    ports:
      - "8082:8080"
    depends_on:
      postgres-identity:
        condition: service_healthy
      rabbitmq:
        condition: service_started
